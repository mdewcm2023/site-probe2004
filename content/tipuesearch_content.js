var tipuesearch = {"pages": [{'title': 'About', 'text': '網站: https://github.com/mdewcm2023/site-probe2004 \xa0 \n 倉儲: https://mdewcm2023.github.io/site-probe2004/ \xa0 \n', 'tags': '', 'url': 'About.html'}, {'title': 'w2-8', 'text': '建網頁 \n', 'tags': '', 'url': 'w2-8.html'}, {'title': 'w3', 'text': 'Windows 利用 Ctrl + Shift + Esc 帶出工作管理員中的效能, 可以檢視電腦硬體與網路的運作狀況. \n 檢查電腦 services, 開始 -> 滑鼠右鍵帶出電腦管理 -> 服務與應用程式 可以查看電腦目前所設定或啟動的 services \n 從上述第二版可攜 Python 轉進第三版: \n 進行下列修改: \n \n 建立 home_ipv6 目錄下的 DeskTop 目錄 (與 AppData 接受程式執行時的暫存檔案) \n 編輯 python.properties 將 line 153 改為: python.command=pythonw \n 編輯 SciTEGlobal.properties 將 line 162 改為: load.on.activate=1 (若編輯中的檔案在其他應用程式修 改後, 可直接在 SciTE 中自動 load. \n 編輯 SciTEGlobal.properties 將 line 204 改為: tabsize=4 \n 編輯 SciTEGlobal.properties 將 line 205 改為: indent.size=4 \n 編輯 SciTEGlobal.properties 將 line 335 # 拿掉 (code.page=65001, 表示編輯區使用 UTF-8 編碼) \n 編輯 SciTEGlobal.properties 將 line 336 以 # 蓋掉 (code.page=0, 表示要用系統的中文編碼, 也就是 big-5) \n \n 修改之後的可攜 Python: \xa0 wcm_portable_w2-3.7z \n', 'tags': '', 'url': 'w3.html'}, {'title': 'w5', 'text': '\n 建立 1a 學員 \xa0 https://exam.cycu.org \xa0考試帳號 \n 提供 Solid Edge 2023\xa0 可攜版下載 \xa0(for @nfu users only) \n 在個人 site-github帳號 網頁中寫 Brython 程式 \n 如何在 stud2.cycu.org 中配置個人的動態網站 \n \n 可以使用電腦輔助設計室中\xa0C:\\2021_cadlab_portable 的程式系統, 雙點擊 start_ipv6.bat, 啟動後, 檢查是否符合執行 cmsimde 網站. \n cmsimde 倉儲網址:\xa0 https://github.com/mdecycu/cmsimde \xa0 \n 原先電腦輔助設計室的 Wifi: 801WIFI 並沒有將 IPv4 與 IPv6 協定同時啟用, 目前已經修改, 因此只要在 Wifi 連線後, 將其對應的雙協定啟用後, 將可取得 192.168.50.X 與 2001:288:6004:17:: 等兩組 IP, 同時以 IPv4 與 IPv6 網路協定上網. \n 利用 cmsimde 將個人的倉儲轉為可動態啟動網站, 也可將動態網站內容轉為靜態網站的步驟: \n \n github 上的倉儲必須先設定 Github Pages, 將主倉儲設為網站的根目錄. \n 將倉儲 git clone 到近端後, 必須將 cmsimde 倉儲內容放入個人倉儲中, 且目錄名稱必須為 cmsimde, 同時將 cmsimde 中 up_dir 的目錄內容複製到個人倉儲的根目錄. \n 由於上述兩個動作, 近端倉儲設定好 cmsimde 動態與靜態網站架構後, 必須擁有修改遠端倉儲的權限, 而此權限, 可以透過 github 帳號下的 token 或 SSH 協定進行配置, 若採 token, 取得管理倉儲的權限, 則該 token 必須在有效期間內, 具備管理 repo 的權限. 若採 SSH,\xa0 則近端 session 對應必須設定與 github 上公鑰對應的私鑰. token 取得後, 必須放到倉儲 .git 目錄中 config 檔案裡的 url 連結, 也就是放在 https:// 之後, github.com 之前, 且在 token 與 github.com 中間加上 @ 符號. \n 當個人倉儲中的 cmsimde 放入, 且 up_dir 目錄取出到倉儲根目錄後, 使用者在可攜程式環境中的命令列, 就可以 cd 進入個人倉儲目錄後, 執行 cms.bat 執行動態網站, 之後用瀏覽器連結, 以 admin 共用密碼登入管理. \n 當使用者利用動態網站管理內容後, 可利用 generate_pages 將動態網站轉為靜態網站內容後, 以 acp 按鈕加上提交訊息, 將改版資料送到 github.com, 但需事先設定好可攜系統中 home_ipv6 目錄裡的 .gitconfig, 其內容包含 user.name 與 user.email 等內容, 以便用於 git commit 之提交身分綁定. \n \n', 'tags': '', 'url': 'w5.html'}, {'title': 'w9', 'text': '教學如何加入Brython以及加分題目 \n', 'tags': '', 'url': 'w9.html'}, {'title': 'w11', 'text': '下載OBS，設定可攜式OBS系統 \n', 'tags': '', 'url': 'w11.html'}, {'title': 'Brython', 'text': 'href="https://en.wikipedia.org/wiki/Python_(programming_language)">https://en.wikipedia.org/wiki/Python_(programming_language) \n Examples: \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python Tutorial: \n https://docs.python.org/3/tutorial/ \n An informal introduction to Python \n Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍) \n Variables ( Python Keywords ) \n Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解) \n Numbers  (整數 int(), 浮點數 float()) \n Strings  (字串) \n print (Python 內建函式,  print()  函式) \n Python control flow tools \n for \n if \n range \n open \n read \n lists \n tuples \n dictionaries \n functions \n try ... except \n break \n pass \n classes \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n', 'tags': '', 'url': 'Brython.html'}, {'title': 'Score', 'text': ' Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n \n \n \n  <script>\n  MathJax = {\n    tex: {inlineMath: [[\'$\', \'$\'], [\'\\(\', \'\\)\']]}\n  };\n  </script>\n  <script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-chtml.js"></script> \n \n # Example data for five tests\nurl1 = "https://gist.githubusercontent.com/mdecycu/07f0f0817115a68d55d6ca603c5ab393/raw/239f4eb84715978daead6ac1f231af7f190a2a5e/1aw5.txt"\nurl2 = "https://gist.githubusercontent.com/mdecycu/07f0f0817115a68d55d6ca603c5ab393/raw/239f4eb84715978daead6ac1f231af7f190a2a5e/1aw6.txt"\nurl3 = "https://gist.githubusercontent.com/mdecycu/07f0f0817115a68d55d6ca603c5ab393/raw/239f4eb84715978daead6ac1f231af7f190a2a5e/1aw6-2.txt"\nurl4 = "https://gist.githubusercontent.com/mdecycu/07f0f0817115a68d55d6ca603c5ab393/raw/075c06b2baf1bb07665f1a98e9f88f7e81ebe1a4/1aw8.txt"\nurl5 = "https://gist.githubusercontent.com/mdecycu/07f0f0817115a68d55d6ca603c5ab393/raw/239f4eb84715978daead6ac1f231af7f190a2a5e/1aw9.txt"\n\n\'\'\'\ntest1 = ["12345:80", "67890:70"]\ntest2 = ["12345:85", "67890:75"]\ntest3 = ["12345:90", "67890:80"]\ntest4 = ["12345:95", "67890:85"]\ntest5 = ["12345:100", "67890:90"]\n\'\'\'\ntest1 = open(url1).read().split("\\n")[1:]\ntest2 = open(url2).read().split("\\n")[1:]\ntest3 = open(url3).read().split("\\n")[1:]\ntest4 = open(url4).read().split("\\n")[1:]\ntest5 = open(url5).read().split("\\n")[1:]\n\n\n# Create a dictionary to store the student numbers and their test scores\nstudent_scores = {}\n\n# Iterate over the data for each test\nfor test_data in [test1, test2, test3, test4, test5]:\n    # Iterate over the data for this test\n    for item in test_data:\n        # Split the item into its components\n        student_number, score = item.split(":")\n\n        # Convert the score to an integer\n        try:\n            score = int(score)\n        except:\n            score = 0\n\n        # Add the score to the list of scores for this student\n        if student_number not in student_scores:\n            student_scores[student_number] = []\n        student_scores[student_number].append(score)\n\n# Calculate the average score for each student\nfor student_number, scores in student_scores.items():\n    average_score = int(sum(scores) / len(scores))\n    print(f"{student_number}的期中平均成績 {average_score}") \n \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n \n \n \n', 'tags': '', 'url': 'Score.html'}]};